{
  "contentVersion": "1.0.0.0",
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "parameters": {
    "dataFactoryName": {
      "type": "string",
      "metadata": {
        "description": "Data Factory Account name"
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "Existing Azure SQL Database Server name"
      }
    },
    "sqlServerUsername": {
      "type": "string",
      "metadata": {
        "description": "Existing Azure SQL Database Server user name"
      }
    },
    "sqlServerPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Existing Azure SQL Database Server password"
      }
    },
    "targetDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "Existing taget Azure SQL Database name"
      }
    },
    "targetSqlSchema": {
      "type": "string",
      "metadata": {
        "description": "Existing taget Azure SQL schema"
      }
    },
    "targetSqlTable": {
      "type": "string",
      "metadata": {
        "description": "Existing target table in Azure SQL Database"
      }
    },
    "salesforceUsername": {
      "type": "string",
      "metadata": {
        "description": "Salesforce login username"
      }
    },
    "salesforcePassword": {
      "type": "securestring",
      "metadata": {
        "description": "Salesforce login password"
      }
    },
    "salesforceSecurityToken": {
      "type": "securestring",
      "metadata": {
        "description": "Salesforce secure token"
      }
    },
    "targetSalesforceTable": {
      "type": "string",
      "metadata": {
        "description": "Existing target table in Salesforce"
      }
    },
    "pipelineName": {
      "type": "string",
      "metadata": {
        "description": "Name of the copy pipeline"
      }
    },
    "sqlWritableTypeName": {
      "type": "string",
      "metadata": {
        "description": "Sql table type name"
      }
    },
    "sqlWriterStoredProcedureName": {
      "type": "string",
      "metadata": {
        "description": "Sql stored procedure name"
      }
    },
    "pipelineStartDate": {
      "type": "string",
      "metadata": {
        "description": "Start date for the pipeline"
      }
    },
    "pipelineEndDate": {
      "type": "string",
      "metadata": {
        "description": "End date for the pipeline"
      }
    },
    "sliceFrequency": {
      "type": "string",
      "metadata": {
        "description": "Minute,Hour,Day,Week,Month"
      }
    },
    "sliceInterval": {
      "type": "integer",
      "metadata": {
        "description": "Minimum 15 if frequency is set to Minute"
      }
    },
    "pipelineType": {
      "type": "string",
      "metadata": {
        "description": "PreDeployment or PostDeployment"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-10-01",
    "storageApiVersion": "2015-05-01-preview",
    "sqlLinkedServiceName": "AzureSqlLinkedService",
    "salesforceLinkedServiceName": "SalesforceLinkedService"
  },
  "resources": [
    {
      "name": "[parameters('dataFactoryName')]",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.DataFactory/datafactories",
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "dependsOn": [ "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'))]" ],
          "type": "linkedservices",
          "name": "[variables('sqlLinkedServiceName')]",
          "apiVersion": "[variables('apiVersion')]",
          "properties": {
            "type": "AzureSqlDatabase",
            "typeProperties": {
              "connectionString": "[concat('Data Source=tcp:',parameters('sqlServerName'),'.database.windows.net,1433;Initial Catalog=',parameters('targetDatabaseName'),';Integrated Security=False;User ID=',parameters('sqlServerUsername'),';Password=',parameters('sqlServerPassword'),';Encrypt=True;Connection Timeout=30')]"
            }
          }
        },
        {
          "dependsOn": [ "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'))]" ],
          "type": "linkedservices",
          "name": "[variables('salesforceLinkedServiceName')]",
          "apiVersion": "[variables('apiVersion')]",
          "properties": {
            "type": "Salesforce",
            "typeProperties": {
              "username": "[parameters('salesforceUsername')]",
              "password": "[parameters('salesforcePassword')]",
              "securityToken": "[parameters('salesforceSecurityToken')]"
            }
          }
        },
        {
          "dependsOn": [
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'))]",
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'), '/linkedServices/', variables('sqlLinkedServiceName'))]"
          ],
          "type": "datasets",
          "name": "[concat(parameters('pipelineType'),parameters('targetSqlTable'),'_Output')]",
          "apiVersion": "[variables('apiVersion')]",
          "properties": {
            "type": "AzureSqlTable",
            "structure": "SQLTABLEDEFINITION",
            "typeProperties": {
              "tableName": "[parameters('targetSqlTable')]"
            },
            "linkedServiceName": "[variables('sqlLinkedServiceName')]",
            "availability": {
              "frequency": "[parameters('sliceFrequency')]",
              "interval": "[parameters('sliceInterval')]"
            },
            "external": false
          }
        },
        {
          "dependsOn": [
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'))]",
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'), '/linkedServices/', variables('salesforceLinkedServiceName'))]"
          ],
          "type": "datasets",
          "name": "[concat(parameters('pipelineType'),parameters('targetSalesforceTable'),'_Input')]",
          "apiVersion": "[variables('apiVersion')]",
          "properties": {
            "structure": "SALESFORCETABLEDEFINITION",
            "type": "RelationalTable",
            "typeProperties": {
              "tableName": "[parameters('targetSalesforceTable')]"
            },
            "linkedServiceName": "[variables('salesforceLinkedServiceName')]",
            "availability": {
              "frequency": "[parameters('sliceFrequency')]",
              "interval": "[parameters('sliceInterval')]"
            },
            "external": true
          }
        },
        {
          "dependsOn": [
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'))]",
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'), '/linkedServices/', variables('sqlLinkedServiceName'))]",
            "[concat('Microsoft.DataFactory/dataFactories/', parameters('dataFactoryName'), '/linkedServices/', variables('salesforceLinkedServiceName'))]",
            "[concat('Microsoft.DataFactory/datafactories/',parameters('dataFactoryName'),'/datasets/', parameters('pipelineType'),parameters('targetSalesforceTable'),'_Input')]",
            "[concat('Microsoft.DataFactory/datafactories/',parameters('dataFactoryName'),'/datasets/', parameters('pipelineType'),parameters('targetSqlTable'),'_Output')]"
          ],
          "type": "datapipelines",
          "name": "[concat(parameters('pipelineType'),'_',parameters('pipelineName'))]",
          "apiVersion": "[variables('apiVersion')]",
          "properties": {
            "description": "Copy data from Salesforce to Sql Azure",
            "activities": [
              {
                "type": "Copy",
                "typeProperties": {
                  "source": {
                    "type": "RelationalSource",
                    "query": "SALESFORCEQUERY"
                  },
                  "sink": {
                    "type": "SqlSink",
                    "sqlWriterStoredProcedureName": "[concat(parameters('targetSqlSchema'),'.',parameters('sqlWriterStoredProcedureName'))]",
                    "sqlWriterTableType": "[concat(parameters('targetSqlSchema'),'.',parameters('sqlWritableTypeName'))]",
                    "writeBatchSize": 500,
                    "writeBatchTimeout": "00:00:00"
                  }
                },
                "inputs": [
                  {
                    "name": "[concat(parameters('pipelineType'),parameters('targetSalesforceTable'),'_Input')]"
                  }
                ],
                "outputs": [
                  {
                    "name": "[concat(parameters('pipelineType'),parameters('targetSqlTable'),'_Output')]"
                  }
                ],
                "policy": {
                  "timeout": "02:00:00",
                  "concurrency": 1,
                  "executionPriorityOrder": "NewestFirst",
                  "style": "StartOfInterval",
                  "retry": 2,
                  "longRetry": 1,
                  "longRetryInterval": "00:05:00"
                },
                "scheduler": {
                  "frequency": "[parameters('sliceFrequency')]",
                  "interval": "[parameters('sliceInterval')]"
                },
                "name": "[concat(parameters('pipelineType'),'_Copy')]"
              }
            ],
            "start": "[parameters('pipelineStartDate')]",
            "end": "[parameters('pipelineEndDate')]"
          }
        }
      ]
    }
  ]
}
